generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

generator pothos {
  provider = "prisma-pothos-types"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Client {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  createdAt DateTime? @default(now())
}

model Rabbit {
  id        String    @id @default(uuid())
  name      String
  image     String?
  birthDate DateTime? @default(now())
  gender    Gender?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
  createdBy User?     @relation(fields: [userId], references: [id])
  userId    String?
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Shopping {
  id           String   @id @default(uuid())
  item         String
  description  String?
  purchaseDate DateTime @default(now())
  cantity      Int      @default(1)
  unityValue   Int
  totalValue   Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  User         User?    @relation(fields: [userId], references: [id])
  userId       String?
}

model User {
  id            String     @id @default(uuid())
  name          String?
  email         String     @unique
  emailVerified DateTime?
  image         String?
  role          Role       @default(USER)
  purchases     Shopping[]
  Account       Account[]
  Session       Session[]
  Rabbit        Rabbit[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Role {
  USER
  CLIENT
  ADMIN
}

enum Gender {
  MALE
  FEMALE
}
